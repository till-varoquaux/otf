[tool.poetry]
name = "otf"
version = "0.1.0-alpha.4"
description = "A python framework for on-the-fly distributed workflows"
authors = ["Till Varoquaux <till.varoquaux@gmail.com>"]
license = "CC0-1.0"
readme = "README.rst"
repository = "https://github.com/till-varoquaux/otf"
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
 ]


[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.dev-dependencies]
mypy = "^0.942"
flake8 = "*"
isort = "*"
black = {extras = ["jupyter"], version = "^22.3.0"}
pytest-cov = "*"
Sphinx = "*"
types-docutils = "^0.18.0"
jupyter = "^1.0.0"
furo = "^2022.4.7"


[tool.black]
line-length = 80
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 80

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["otf"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
python_version = "3.10"
show_error_codes = true
strict = true
warn_unused_ignores = false
no_incremental = true
exclude = ["tests/*", "docs/deep_dives/examples/*"]

[tool.pytest.ini_options]
addopts = "--cov --doctest-modules"
testpaths = ["src", "tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
